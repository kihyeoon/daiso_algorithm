function solution(k, m, score) {
  // 사과는 1점부터 k점(최상)까지
  // score는 각 사과들의 점수임
  // 한 상자에 사과 m개 담음
  // 상자 안의 사과 중 최하품이 p점인 경우, 한 상자의 가격은 k*m임
  //   즉 최하점 * 개수
  // 가능한 많은 사과를 팔았을 때, 얻을 수 있는 최대 이익은?
  // k = 3, m = 4, score = [1, 2, 3, 1, 2, 3, 1]
  // [2, 3, 2, 3]의 조합임

  // 일단... 박스당 가격은 박스.length * Math.min(...박스)임
  // 그리고...아무리 숫자가 커도 작은거 하나 껴있으면 작은애로 가격 책정함
  // 즉 작은애들끼리 뭉쳐주고, 큰 애들끼리 따로 뭉쳐줘야 함
  // 근데 또 최대 이익을 올려야 해서...박스 자체는 큰 애들끼리 먼저 만들어줘야함

  let answer = 0;
  score.sort((a, b) => b - a);
  for (let i = m - 1; i < score.length; i += m) {
    answer += score[i] * m;
  }
  return answer;
}
