function solution(n) {
  // 아이언슈트의 움직임
  // 1번: K칸 한번에 이동
  // 2번: (이동한거리) x 2 의 위치로 순간이동
  // 단 1번의 경우 K 만큼 건전지량 소모
  // 건전지 소모는 최소로 해야한다.

  // n만큼 떨어진 곳으로 가야함

  // 예시
  // 5만큼 떨어진 곳으로 갈 때
  // 1만큼 앞으로 전진하고 (1)
  // 2로 순간이동 (1 x 2 = 2);
  // 4로 순간이동 (2 x 2 = 4);
  // 1만큼 앞으로 전진 (4 + 1 = 5);
  // 건전지 사용량은 2

  // 6일때
  // 1전진 2순간이동 1전진 6순간이동
  // 2소모

  // 4일때
  // 1전진 2순간이동 2순간이동
  // 1소모

  // 3일때
  // 1전진 2순간이동 1전진
  // 2소모

  // 2일때
  // 1전진 2순간이동
  // 1소모

  // 어차피 순간이동 위주로 사용을 해줘야함..
  // 즉, n에서부터 순간이동을 했냐 안했냐로 판단을 해야함
  // n/2 를 계속 해주고 만약 n%2 ===1 이면 (n-1)/2 해줌
  // n이 홀수면 애초에 카운트에서 1을 더해주고 시작을 해야함..
  let usage = 0;
  while (n !== 1) {
    if (n % 2 === 1) {
      usage++;
      n = (n - 1) / 2;
    } else {
      n = n / 2;
    }
  }
  return usage + 1;
}
