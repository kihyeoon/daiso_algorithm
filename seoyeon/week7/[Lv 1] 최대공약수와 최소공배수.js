function solution(n, m) {
    let gcd = cal_gcd(n, m)
    return [gcd, n * m / gcd ];
}

// 최대공약수 구하는 함수
function cal_gcd(a, b) {
    return a % b ? cal_gcd(b, a % b) : b
}

// 최대공약수
// 작은수를 큰수로 나눴을때 나머지가 0이면 최대공약수 이다.
// 나머지가 0이 아니면 작은수를 나머지로 나눈다.
// 나머지가 0일때까지 반복한다.

// 최소공배수 ex) 6 : 2*3, 12 : 2*2*3
// 각 수를 소인수 분해 했을 때, 교집합인 수를 곱한게 최대공약수이고, ( 2*3 = 6)
// 합집합을 곱한게 최소공배수이다.(2*2*3 = 12) 
// 즉, 각 수를 곱하 최대 공약수로 나누면 최소공배수가 된다. 이는 각 수를 곱하면 교집합이 중복이 되기때문에 교집합(최소공배수)으로 나눠준다. (6*12/6)